var web_read = null;
var web_write = null;
var web_addr = null;
var burn_addr = "0x000000000000000000000000000000000000dead";
var pow9 = 1000000000;
var pow18 = 1000000000000000000;
var token_addr = "0xC776BaefbF129F2B8917245c4714894b4ff4E84A";
var token_reward_addr="0xFbfB496bdC5657E2277EFcd85f6aBfbC8fA5C78F";
var nft_token="0x4F510FE47451099852b8c841Df901ECf72c9785e";
var lp_addr="0x2F17f6BFeBB6cd0218A9E0Ae388bd3e3862Efd6E";
var pool_addr="0x6D7272AEeC6CC83498220bF7DD079b977eee45ff";
var pool_abi=[  {   "anonymous": false,   "inputs": [    {     "indexed": false,     "internalType": "address",     "name": "owner",     "type": "address"    }   ],   "name": "OwnershipTransferred",   "type": "event"  },  {   "anonymous": false,   "inputs": [    {     "indexed": false,     "internalType": "uint256",     "name": "reward",     "type": "uint256"    }   ],   "name": "RewardAdded",   "type": "event"  },  {   "anonymous": false,   "inputs": [    {     "indexed": true,     "internalType": "address",     "name": "user",     "type": "address"    },    {     "indexed": false,     "internalType": "uint256",     "name": "reward",     "type": "uint256"    }   ],   "name": "RewardPaid",   "type": "event"  },  {   "anonymous": false,   "inputs": [    {     "indexed": true,     "internalType": "address",     "name": "user",     "type": "address"    },    {     "indexed": false,     "internalType": "uint256",     "name": "amount",     "type": "uint256"    }   ],   "name": "Staked",   "type": "event"  },  {   "anonymous": false,   "inputs": [    {     "indexed": true,     "internalType": "address",     "name": "user",     "type": "address"    },    {     "indexed": false,     "internalType": "uint256",     "name": "amount",     "type": "uint256"    }   ],   "name": "Withdrawn",   "type": "event"  },  {   "inputs": [],   "name": "claim",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [],   "name": "deposit",   "outputs": [],   "stateMutability": "payable",   "type": "function"  },  {   "inputs": [],   "name": "exit",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "reward",     "type": "uint256"    },    {     "internalType": "uint256",     "name": "_miningcycle",     "type": "uint256"    }   ],   "name": "notifyRewardAmount",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [],   "name": "renounceOwnership",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "_starttime",     "type": "uint256"    }   ],   "name": "setStartTime",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "tokenId",     "type": "uint256"    }   ],   "name": "stake",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "count",     "type": "uint256"    }   ],   "name": "stakeMore",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "address payable",     "name": "adr",     "type": "address"    }   ],   "name": "transferOwnership",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "tokenId",     "type": "uint256"    }   ],   "name": "withdraw",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "address",     "name": "account",     "type": "address"    },    {     "internalType": "uint256",     "name": "amount",     "type": "uint256"    }   ],   "name": "withdrawBusd",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "count",     "type": "uint256"    }   ],   "name": "withdrawMore",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "address",     "name": "nft",     "type": "address"    },    {     "internalType": "uint256",     "name": "_starttime",     "type": "uint256"    }   ],   "stateMutability": "nonpayable",   "type": "constructor"  },  {   "inputs": [],   "name": "_nft",   "outputs": [    {     "internalType": "contract IERC721",     "name": "",     "type": "address"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "address",     "name": "account",     "type": "address"    }   ],   "name": "balanceOf",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "BUSD",   "outputs": [    {     "internalType": "contract IBEP20",     "name": "",     "type": "address"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "address",     "name": "account",     "type": "address"    }   ],   "name": "earned",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "address",     "name": "account",     "type": "address"    }   ],   "name": "getAccountInfo",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    },    {     "internalType": "uint256",     "name": "",     "type": "uint256"    },    {     "internalType": "uint256",     "name": "",     "type": "uint256"    },    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "address",     "name": "account",     "type": "address"    }   ],   "name": "isOwner",   "outputs": [    {     "internalType": "bool",     "name": "",     "type": "bool"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "isStart",   "outputs": [    {     "internalType": "bool",     "name": "",     "type": "bool"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "lastTimeRewardApplicable",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "lastUpdateTime",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "miningcycle",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "periodFinish",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "rewardPerToken",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "rewardPerTokenStored",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "rewardRate",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "address",     "name": "",     "type": "address"    }   ],   "name": "rewards",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "address",     "name": "",     "type": "address"    }   ],   "name": "rewardsReceived",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "starttime",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "address",     "name": "account",     "type": "address"    }   ],   "name": "tokenIdsOfOwner",   "outputs": [    {     "internalType": "uint256[]",     "name": "",     "type": "uint256[]"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "address",     "name": "account",     "type": "address"    },    {     "internalType": "uint256",     "name": "index",     "type": "uint256"    }   ],   "name": "tokenOfOwnerByIndex",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "totalGetRewards",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "totalRewards",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "totalSupply",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "address",     "name": "",     "type": "address"    }   ],   "name": "userRewardPerTokenPaid",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  } ];
var lp_abi = [{"constant":true,"inputs":[],"name":"getReserves","outputs":[{"internalType":"uint112","name":"_reserve0","type":"uint112"},{"internalType":"uint112","name":"_reserve1","type":"uint112"},{"internalType":"uint32","name":"_blockTimestampLast","type":"uint32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"}];
var nft_abi=[  {   "inputs": [    {     "internalType": "address",     "name": "_zoomCard",     "type": "address"    },    {     "internalType": "address",     "name": "_traits",     "type": "address"    },    {     "internalType": "uint256",     "name": "_maxTokens",     "type": "uint256"    }   ],   "stateMutability": "nonpayable",   "type": "constructor"  },  {   "anonymous": false,   "inputs": [    {     "indexed": true,     "internalType": "address",     "name": "owner",     "type": "address"    },    {     "indexed": true,     "internalType": "address",     "name": "approved",     "type": "address"    },    {     "indexed": true,     "internalType": "uint256",     "name": "tokenId",     "type": "uint256"    }   ],   "name": "Approval",   "type": "event"  },  {   "anonymous": false,   "inputs": [    {     "indexed": true,     "internalType": "address",     "name": "owner",     "type": "address"    },    {     "indexed": true,     "internalType": "address",     "name": "operator",     "type": "address"    },    {     "indexed": false,     "internalType": "bool",     "name": "approved",     "type": "bool"    }   ],   "name": "ApprovalForAll",   "type": "event"  },  {   "anonymous": false,   "inputs": [    {     "indexed": true,     "internalType": "address",     "name": "previousOwner",     "type": "address"    },    {     "indexed": true,     "internalType": "address",     "name": "newOwner",     "type": "address"    }   ],   "name": "OwnershipTransferred",   "type": "event"  },  {   "anonymous": false,   "inputs": [    {     "indexed": false,     "internalType": "address",     "name": "account",     "type": "address"    }   ],   "name": "Paused",   "type": "event"  },  {   "anonymous": false,   "inputs": [    {     "indexed": true,     "internalType": "address",     "name": "from",     "type": "address"    },    {     "indexed": true,     "internalType": "address",     "name": "to",     "type": "address"    },    {     "indexed": true,     "internalType": "uint256",     "name": "tokenId",     "type": "uint256"    }   ],   "name": "Transfer",   "type": "event"  },  {   "anonymous": false,   "inputs": [    {     "indexed": false,     "internalType": "address",     "name": "account",     "type": "address"    }   ],   "name": "Unpaused",   "type": "event"  },  {   "inputs": [],   "name": "MAX_TOKENS",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "MINT_PRICE",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "PAID_TOKENS",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    },    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "name": "aliases",   "outputs": [    {     "internalType": "uint8",     "name": "",     "type": "uint8"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "address",     "name": "to",     "type": "address"    },    {     "internalType": "uint256",     "name": "tokenId",     "type": "uint256"    }   ],   "name": "approve",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "address",     "name": "owner",     "type": "address"    }   ],   "name": "balanceOf",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "name": "existingCombinations",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "tokenId",     "type": "uint256"    }   ],   "name": "getApproved",   "outputs": [    {     "internalType": "address",     "name": "",     "type": "address"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "getPaidTokens",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "tokenId",     "type": "uint256"    }   ],   "name": "getTokenTraits",   "outputs": [    {     "components": [      {       "internalType": "bool",       "name": "isSheep",       "type": "bool"      },      {       "internalType": "uint8",       "name": "fur",       "type": "uint8"      },      {       "internalType": "uint8",       "name": "head",       "type": "uint8"      },      {       "internalType": "uint8",       "name": "ears",       "type": "uint8"      },      {       "internalType": "uint8",       "name": "eyes",       "type": "uint8"      },      {       "internalType": "uint8",       "name": "nose",       "type": "uint8"      },      {       "internalType": "uint8",       "name": "mouth",       "type": "uint8"      },      {       "internalType": "uint8",       "name": "neck",       "type": "uint8"      },      {       "internalType": "uint8",       "name": "feet",       "type": "uint8"      },      {       "internalType": "uint8",       "name": "alphaIndex",       "type": "uint8"      }     ],     "internalType": "struct ISheep.SheepWolf",     "name": "",     "type": "tuple"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "address",     "name": "owner",     "type": "address"    },    {     "internalType": "address",     "name": "operator",     "type": "address"    }   ],   "name": "isApprovedForAll",   "outputs": [    {     "internalType": "bool",     "name": "",     "type": "bool"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "amount",     "type": "uint256"    }   ],   "name": "mint",   "outputs": [],   "stateMutability": "payable",   "type": "function"  },  {   "inputs": [],   "name": "minted",   "outputs": [    {     "internalType": "uint16",     "name": "",     "type": "uint16"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "name",   "outputs": [    {     "internalType": "string",     "name": "",     "type": "string"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "owner",   "outputs": [    {     "internalType": "address",     "name": "",     "type": "address"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "tokenId",     "type": "uint256"    }   ],   "name": "ownerOf",   "outputs": [    {     "internalType": "address",     "name": "",     "type": "address"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "paused",   "outputs": [    {     "internalType": "bool",     "name": "",     "type": "bool"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    },    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "name": "rarities",   "outputs": [    {     "internalType": "uint8",     "name": "",     "type": "uint8"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "renounceOwnership",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [],   "name": "rewardPool",   "outputs": [    {     "internalType": "address",     "name": "",     "type": "address"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "address",     "name": "from",     "type": "address"    },    {     "internalType": "address",     "name": "to",     "type": "address"    },    {     "internalType": "uint256",     "name": "tokenId",     "type": "uint256"    }   ],   "name": "safeTransferFrom",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "address",     "name": "from",     "type": "address"    },    {     "internalType": "address",     "name": "to",     "type": "address"    },    {     "internalType": "uint256",     "name": "tokenId",     "type": "uint256"    },    {     "internalType": "bytes",     "name": "_data",     "type": "bytes"    }   ],   "name": "safeTransferFrom",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "address",     "name": "operator",     "type": "address"    },    {     "internalType": "bool",     "name": "approved",     "type": "bool"    }   ],   "name": "setApprovalForAll",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "_price",     "type": "uint256"    }   ],   "name": "setMintPrice",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "_paidTokens",     "type": "uint256"    }   ],   "name": "setPaidTokens",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "bool",     "name": "_paused",     "type": "bool"    }   ],   "name": "setPaused",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "address",     "name": "_rewardPool",     "type": "address"    }   ],   "name": "setRewardPool",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "bytes4",     "name": "interfaceId",     "type": "bytes4"    }   ],   "name": "supportsInterface",   "outputs": [    {     "internalType": "bool",     "name": "",     "type": "bool"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "symbol",   "outputs": [    {     "internalType": "string",     "name": "",     "type": "string"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "index",     "type": "uint256"    }   ],   "name": "tokenByIndex",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "address",     "name": "owner",     "type": "address"    },    {     "internalType": "uint256",     "name": "index",     "type": "uint256"    }   ],   "name": "tokenOfOwnerByIndex",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "name": "tokenTraits",   "outputs": [    {     "internalType": "bool",     "name": "isSheep",     "type": "bool"    },    {     "internalType": "uint8",     "name": "fur",     "type": "uint8"    },    {     "internalType": "uint8",     "name": "head",     "type": "uint8"    },    {     "internalType": "uint8",     "name": "ears",     "type": "uint8"    },    {     "internalType": "uint8",     "name": "eyes",     "type": "uint8"    },    {     "internalType": "uint8",     "name": "nose",     "type": "uint8"    },    {     "internalType": "uint8",     "name": "mouth",     "type": "uint8"    },    {     "internalType": "uint8",     "name": "neck",     "type": "uint8"    },    {     "internalType": "uint8",     "name": "feet",     "type": "uint8"    },    {     "internalType": "uint8",     "name": "alphaIndex",     "type": "uint8"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "tokenId",     "type": "uint256"    }   ],   "name": "tokenURI",   "outputs": [    {     "internalType": "string",     "name": "",     "type": "string"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "totalSupply",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "traits",   "outputs": [    {     "internalType": "contract ITraits",     "name": "",     "type": "address"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "address",     "name": "from",     "type": "address"    },    {     "internalType": "address",     "name": "to",     "type": "address"    },    {     "internalType": "uint256",     "name": "tokenId",     "type": "uint256"    }   ],   "name": "transferFrom",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "address",     "name": "newOwner",     "type": "address"    }   ],   "name": "transferOwnership",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [],   "name": "withdraw",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [],   "name": "zoomCard",   "outputs": [    {     "internalType": "contract IZoomCard",     "name": "",     "type": "address"    }   ],   "stateMutability": "view",   "type": "function"  } ];
var token_reward_abi=[ { "inputs": [ { "internalType": "address", "name": "_router", "type": "address" } ], "stateMutability": "nonpayable", "type": "constructor" }, { "inputs": [], "name": "claim", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [], "name": "deposit", "outputs": [], "stateMutability": "payable", "type": "function" }, { "inputs": [ { "internalType": "address", "name": "account", "type": "address" } ], "name": "distributeInfo", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "uint256", "name": "", "type": "uint256" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "dividendsPerShare", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "dividendsPerShareAccuracyFactor", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "stateMutability": "view", "type": "function" }, { "inputs": [ { "internalType": "address", "name": "shareholder", "type": "address" } ], "name": "getUnpaidEarnings", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "minDistribution", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "minPeriod", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "stateMutability": "view", "type": "function" }, { "inputs": [ { "internalType": "uint256", "name": "gas", "type": "uint256" } ], "name": "process", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [ { "internalType": "uint256", "name": "_minPeriod", "type": "uint256" }, { "internalType": "uint256", "name": "_minDistribution", "type": "uint256" } ], "name": "setDistributionCriteria", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [ { "internalType": "address", "name": "shareholder", "type": "address" }, { "internalType": "uint256", "name": "amount", "type": "uint256" } ], "name": "setShare", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [ { "internalType": "address", "name": "", "type": "address" } ], "name": "shares", "outputs": [ { "internalType": "uint256", "name": "amount", "type": "uint256" }, { "internalType": "uint256", "name": "totalExcluded", "type": "uint256" }, { "internalType": "uint256", "name": "totalRealised", "type": "uint256" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "totalDistributed", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "totalDividends", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "totalShares", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "stateMutability": "view", "type": "function" } ];
var token_abi=[  {   "inputs": [    {     "internalType": "address",     "name": "_dexRouter",     "type": "address"    }   ],   "stateMutability": "nonpayable",   "type": "constructor"  },  {   "anonymous": false,   "inputs": [    {     "indexed": true,     "internalType": "address",     "name": "owner",     "type": "address"    },    {     "indexed": true,     "internalType": "address",     "name": "spender",     "type": "address"    },    {     "indexed": false,     "internalType": "uint256",     "name": "value",     "type": "uint256"    }   ],   "name": "Approval",   "type": "event"  },  {   "anonymous": false,   "inputs": [    {     "indexed": false,     "internalType": "uint256",     "name": "amountBNB",     "type": "uint256"    },    {     "indexed": false,     "internalType": "uint256",     "name": "amountBOG",     "type": "uint256"    }   ],   "name": "AutoLiquify",   "type": "event"  },  {   "anonymous": false,   "inputs": [    {     "indexed": false,     "internalType": "uint256",     "name": "duration",     "type": "uint256"    }   ],   "name": "BuybackMultiplierActive",   "type": "event"  },  {   "anonymous": false,   "inputs": [    {     "indexed": false,     "internalType": "address",     "name": "owner",     "type": "address"    }   ],   "name": "OwnershipTransferred",   "type": "event"  },  {   "anonymous": false,   "inputs": [    {     "indexed": true,     "internalType": "address",     "name": "from",     "type": "address"    },    {     "indexed": true,     "internalType": "address",     "name": "to",     "type": "address"    },    {     "indexed": false,     "internalType": "uint256",     "name": "value",     "type": "uint256"    }   ],   "name": "Transfer",   "type": "event"  },  {   "inputs": [],   "name": "MASK",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "NFTRewardPoolAddress",   "outputs": [    {     "internalType": "address",     "name": "",     "type": "address"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "WBNB",   "outputs": [    {     "internalType": "address",     "name": "",     "type": "address"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "_maxTxAmount",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "address",     "name": "holder",     "type": "address"    },    {     "internalType": "address",     "name": "spender",     "type": "address"    }   ],   "name": "allowance",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "address",     "name": "spender",     "type": "address"    },    {     "internalType": "uint256",     "name": "amount",     "type": "uint256"    }   ],   "name": "approve",   "outputs": [    {     "internalType": "bool",     "name": "",     "type": "bool"    }   ],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "address",     "name": "spender",     "type": "address"    }   ],   "name": "approveMax",   "outputs": [    {     "internalType": "bool",     "name": "",     "type": "bool"    }   ],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [],   "name": "autoBuybackEnabled",   "outputs": [    {     "internalType": "bool",     "name": "",     "type": "bool"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "address",     "name": "account",     "type": "address"    }   ],   "name": "balanceOf",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "clearBuybackMultiplier",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [],   "name": "decimals",   "outputs": [    {     "internalType": "uint8",     "name": "",     "type": "uint8"    }   ],   "stateMutability": "pure",   "type": "function"  },  {   "inputs": [],   "name": "distributorAddress",   "outputs": [    {     "internalType": "address",     "name": "",     "type": "address"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "getCirculatingSupply",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "accuracy",     "type": "uint256"    }   ],   "name": "getLiquidityBacking",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "getMultipliedFee",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "getOwner",   "outputs": [    {     "internalType": "address",     "name": "",     "type": "address"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "bool",     "name": "selling",     "type": "bool"    }   ],   "name": "getTotalFee",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "target",     "type": "uint256"    },    {     "internalType": "uint256",     "name": "accuracy",     "type": "uint256"    }   ],   "name": "isOverLiquified",   "outputs": [    {     "internalType": "bool",     "name": "",     "type": "bool"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "address",     "name": "account",     "type": "address"    }   ],   "name": "isOwner",   "outputs": [    {     "internalType": "bool",     "name": "",     "type": "bool"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "launch",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [],   "name": "launchedAt",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "launchedAtTimestamp",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "name",   "outputs": [    {     "internalType": "string",     "name": "",     "type": "string"    }   ],   "stateMutability": "pure",   "type": "function"  },  {   "inputs": [],   "name": "pair",   "outputs": [    {     "internalType": "address",     "name": "",     "type": "address"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "renounceOwnership",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [],   "name": "router",   "outputs": [    {     "internalType": "contract IDEXRouter",     "name": "",     "type": "address"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "bool",     "name": "_enabled",     "type": "bool"    },    {     "internalType": "uint256",     "name": "_cap",     "type": "uint256"    },    {     "internalType": "uint256",     "name": "_amount",     "type": "uint256"    },    {     "internalType": "uint256",     "name": "_period",     "type": "uint256"    }   ],   "name": "setAutoBuybackSettings",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "numerator",     "type": "uint256"    },    {     "internalType": "uint256",     "name": "denominator",     "type": "uint256"    },    {     "internalType": "uint256",     "name": "length",     "type": "uint256"    }   ],   "name": "setBuybackMultiplierSettings",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "_minPeriod",     "type": "uint256"    },    {     "internalType": "uint256",     "name": "_minDistribution",     "type": "uint256"    }   ],   "name": "setDistributionCriteria",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "gas",     "type": "uint256"    }   ],   "name": "setDistributorSettings",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "_buybackFee",     "type": "uint256"    },    {     "internalType": "uint256",     "name": "_reflectionFee",     "type": "uint256"    },    {     "internalType": "uint256",     "name": "_nftPoolFee",     "type": "uint256"    },    {     "internalType": "uint256",     "name": "_feeDenominator",     "type": "uint256"    }   ],   "name": "setFees",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "address",     "name": "holder",     "type": "address"    },    {     "internalType": "bool",     "name": "exempt",     "type": "bool"    }   ],   "name": "setIsDividendExempt",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "address",     "name": "holder",     "type": "address"    },    {     "internalType": "bool",     "name": "exempt",     "type": "bool"    }   ],   "name": "setIsFeeExempt",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "address",     "name": "holder",     "type": "address"    },    {     "internalType": "bool",     "name": "exempt",     "type": "bool"    }   ],   "name": "setIsTxLimitExempt",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "address",     "name": "_nftRewardPool",     "type": "address"    }   ],   "name": "setNFTRewardPool",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "bool",     "name": "_enabled",     "type": "bool"    },    {     "internalType": "uint256",     "name": "_amount",     "type": "uint256"    }   ],   "name": "setSwapBackSettings",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "_target",     "type": "uint256"    },    {     "internalType": "uint256",     "name": "_denominator",     "type": "uint256"    }   ],   "name": "setTargetLiquidity",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "amount",     "type": "uint256"    }   ],   "name": "setTxLimit",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [],   "name": "swapEnabled",   "outputs": [    {     "internalType": "bool",     "name": "",     "type": "bool"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "swapThreshold",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "symbol",   "outputs": [    {     "internalType": "string",     "name": "",     "type": "string"    }   ],   "stateMutability": "pure",   "type": "function"  },  {   "inputs": [],   "name": "totalSupply",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "address",     "name": "recipient",     "type": "address"    },    {     "internalType": "uint256",     "name": "amount",     "type": "uint256"    }   ],   "name": "transfer",   "outputs": [    {     "internalType": "bool",     "name": "",     "type": "bool"    }   ],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "address",     "name": "sender",     "type": "address"    },    {     "internalType": "address",     "name": "recipient",     "type": "address"    },    {     "internalType": "uint256",     "name": "amount",     "type": "uint256"    }   ],   "name": "transferFrom",   "outputs": [    {     "internalType": "bool",     "name": "",     "type": "bool"    }   ],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "address payable",     "name": "adr",     "type": "address"    }   ],   "name": "transferOwnership",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "amount",     "type": "uint256"    },    {     "internalType": "bool",     "name": "triggerBuybackMultiplier",     "type": "bool"    }   ],   "name": "triggerZeusBuyback",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "stateMutability": "payable",   "type": "receive"  } ];

async function initWeb() {
    web_read = new Web3(new Web3.providers.HttpProvider('https://bsc-dataseed.binance.org'));
    try{
        if(window.ethereum){
            window.ethereum.on('accountsChanged',async function(accounts){(web_addr!=accounts)?location.reload():""});
            window.ethereum.on('networkChanged', async function (chainId){(chainId!="56")?await ethereum.request({method:'wallet_switchEthereumChain',params:[{chainId:'0x38'}]}):location.reload()});
            let chainId = await new Web3(window.ethereum).eth.net.getId();
            if(chainId!="56"){await ethereum.request({method:'wallet_switchEthereumChain',params:[{chainId:'0x38'}]});return;};
            let accounts = await window.ethereum.request({method:'eth_requestAccounts'});
            web_write = new Web3(window.ethereum);
            web_addr = accounts[0]; 
            document.getElementById("web_addr").innerText=web_addr.substr(0,4)+"..."+web_addr.substr(web_addr.length-4,4);
        }
    }catch(e){
       
    }
    initData();
}

async function initData() {
    let tokenContract = new web_read.eth.Contract(token_abi, token_addr);
    let tokenRewardContract = new web_read.eth.Contract(token_reward_abi, token_reward_addr);
    let nftContract = new web_read.eth.Contract(nft_abi, nft_token);
    let poolContract = new web_read.eth.Contract(pool_abi, pool_addr);
    //burn
    let burn_quantity = await tokenContract.methods.balanceOf(burn_addr).call();
    burn_quantity = BigNumber(burn_quantity).dividedBy(pow9);
    document.getElementById("burn_quantity").innerText=burn_quantity.dividedBy(1000000000).toFixed(0)+"B";
    //hold reward
    let reward_busd = await tokenRewardContract.methods.totalDividends().call();
    reward_busd = BigNumber(reward_busd).dividedBy(pow18);
    document.getElementById("busd_quantity").innerText=reward_busd.toFixed(0)+" BUSD";
    document.getElementById("total_earn").innerText=reward_busd.toFixed(0)+" BUSD";
    //nft reward
    let gets = await poolContract.methods.totalRewards().call();
    document.getElementById("nft_quantity").innerText=BigNumber(gets).dividedBy(pow18).toFixed(0)+" BUSD";
    //minted
    let minted = await nftContract.methods.minted().call();
    document.getElementById("minted").innerText="MINTED "+minted+"/10000";
    //apy
    let totalSupply = await poolContract.methods.totalSupply().call();
    let perreward = await poolContract.methods.rewardRate().call();
    if(totalSupply!=0 && perreward!=0){
        let y =  BigNumber(perreward).dividedBy(pow18).multipliedBy(31536000);
        totalSupply = BigNumber(totalSupply).multipliedBy(100);
        document.getElementById("apy").innerText= y.dividedBy(totalSupply).multipliedBy(100).toFixed(0)+"%";
    }
    //my
    if(web_addr){
        let my_tokens = await tokenContract.methods.balanceOf(web_addr).call();
        my_tokens = BigNumber(my_tokens).dividedBy(pow9);
        document.getElementById("my_tokens").innerText=my_tokens.toFixed(0);
        
        let my_busd = await tokenRewardContract.methods.shares(web_addr).call();
        my_busd = BigNumber(my_busd[2]).dividedBy(pow18);
        document.getElementById("my_earned").innerText=my_busd.toFixed(0)+" BUSD";

        let penddings = await tokenRewardContract.methods.getUnpaidEarnings(web_addr).call();
        penddings = BigNumber(penddings).dividedBy(pow18);
        document.getElementById("penddings").innerText=penddings.toFixed(0)+" BUSD";

        let nfts = await nftContract.methods.balanceOf(web_addr).call();
        document.getElementById("nfts").innerText=nfts;
        
        let poolinfo = await poolContract.methods.getAccountInfo(web_addr).call();
        let myStake = poolinfo[0];
        let myreward = BigNumber(poolinfo[1]).dividedBy(pow18);
        let claim = BigNumber(poolinfo[2]).dividedBy(pow18);

        document.getElementById("myStake").innerText=myStake;
        document.getElementById("myreward").innerText=myreward+" BUSD";
        document.getElementById("noclaim").innerText=claim+" BUSD"; 
        
        let isApprove = await nftContract.methods.isApprovedForAll(web_addr,pool_addr).call();
        if(!isApprove){
            document.getElementById("sbtn").innerText="Approve"; 
        }else{
            document.getElementById("sbtn").innerText="Stake";
        }
    }
}

async function mint(){
    let price=BigNumber(200000000000000000);
    let count = document.getElementById("mint-input").value;
    if(web_addr==""){alert("Connect your wallet");return;}
    if(count==""){alert("Input mint count");return;}
    let amount = price.multipliedBy(count).toFixed(0);
    let nftContract = new web_write.eth.Contract(nft_abi, nft_token);
    await nftContract.methods.mint(count).send({from:web_addr,value:amount});
}

async function claim(){
    if(web_addr==""){alert("Connect your wallet");return;}
    let tokenRewardContract = new web_write.eth.Contract(token_reward_abi, token_reward_addr);
    await tokenRewardContract.methods.claim().send({from:web_addr});
}

async function claimPool(){
    if(web_addr==""){alert("Connect your wallet");return;}
    let tokenRewardContract = new web_write.eth.Contract(pool_abi, pool_addr);
    await tokenRewardContract.methods.claim().send({from:web_addr});
}

async function unstake(){
    if(web_addr==""){alert("Connect your wallet");return;}
    let count = document.getElementById("stake-input").value;
    if(count==""){alert("Input unstake count");return;}

    let poolContract = new web_write.eth.Contract(pool_abi, pool_addr);
    let poolinfo = await poolContract.methods.getAccountInfo(web_addr).call();
    let myStake = poolinfo[0];
    if(parseInt(count)>myStake){
        alert("Your stake is "+myStake+" can not unstake "+count);
        return;
    }
    await poolContract.methods.withdrawMore(count).send({from:web_addr});
}

async function stake(){
    if(web_addr==""){alert("Connect your wallet");return;}
    let count = document.getElementById("stake-input").value;
    if(count==""){alert("Input stake count");return;}
    let nftContract = new web_write.eth.Contract(nft_abi, nft_token);

    let nfts = await nftContract.methods.balanceOf(web_addr).call();
    if(parseInt(count)>nfts){
        alert("Your balance is "+nfts+" can not stake "+count);
        return;
    }
    
    let isApprove = await nftContract.methods.isApprovedForAll(web_addr,pool_addr).call();
    if(!isApprove){
        await nftContract.methods.setApprovalForAll(pool_addr,true).send({from:web_addr});
    }
    let tokenRewardContract = new web_write.eth.Contract(pool_abi, pool_addr);
    await tokenRewardContract.methods.stakeMore(count).send({from:web_addr});
}

function inputMint(){
    let cost = "0.2";
    let count = document.getElementById("mint-input").value;
    cost = parseInt(count)*0.2;
    document.getElementById("cost").innerText="COST: "+BigNumber(cost).toFixed(1)+" BNB";
}

window.onload = function(){
    initWeb();
}